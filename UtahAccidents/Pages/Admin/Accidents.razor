@page "/admin/accidents"
@page "/admin"
@inherits OwningComponentBase<IAccidentsRepository>


<NavLink class="btn btn-primary" href="/admin/accidents/create">Create</NavLink>


<div>
    <label class="text-bold">Search Crash by ID:</label>
    @*<input value="@x" />
    <NavLink class="btn btn-primary btn-sm" href="@GetDetailsUrl(x)">Test Routing</NavLink>*@
</div>


<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr>
            <th>Crash ID</th>
            <th>County</th>
            <th>City</th>
            <th>Main Road</th>
            <th>Severity</th>

        </tr>
    </thead>

    <tbody>
        @if (AccidentData?.Count() > 0)
        {
            @foreach (Accident a in AccidentData)
            {
                <tr>
                    <td>@a.CRASH_ID</td>
                    <td>@a.COUNTY_NAME</td>
                    <td>@a.CITY</td>
                    <td>@a.MAIN_ROAD_NAME</td>
                    <td>@a.CRASH_SEVERITY_ID</td>


                    <td>
                        <NavLink class="btn btn-info btn-sm" href="@GetDetailsUrl(a.CRASH_ID)">Details</NavLink>
                    </td>

                    <td>
                        <NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(a.CRASH_ID)">Edit</NavLink>
                    </td>

                    <td>
                        @*<button class="btn btn-danger btn-sm" @onclick="@(x => RemoveAccident(a))">Yeet This Record</button>*@
                        <NavLink class="btn btn-danger btn-sm" href="@GetRemoveUrl(a.CRASH_ID)">Yeet This Record</NavLink>
                    </td>

                </tr>
                i++;

                @if (i > 20) { break; }
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Accidents on Record</td>
            </tr>
        }


    </tbody>
</table>


@code {

    public Accident accident { get; set; }

    public IAccidentsRepository repo => Service;

    public IEnumerable<Accident> AccidentData { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AccidentData = await repo.Accidents.ToListAsync();
    }

    int i = 0;
    long x;

    public string GetDetailsUrl(long id) => $"/admin/accidents/details/{id}";
    public string GetEditUrl(long id) => $"/admin/accidents/edit/{id}";
    public string GetRemoveUrl(long id) => $"/admin/accidents/remove/{id}";

    public async Task RemoveAccident(Accident a)
    {
        repo.DeleteAccident(a);
        await UpdateData();
    }

}
